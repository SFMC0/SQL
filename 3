/* Getting details of the empty customer emails  */
SELECT 
    [LSSchedulerEmail__c:Contact__r:Id], 
    [LSSchedulerEmail__c:Contact__r:Email], 
    [LSSchedulerEmail__c:Contact__r:HasOptedOutOfEmail], 
    [LSSchedulerEmail__c:Id], 
    [LSSchedulerEmail__c:Banker_Email__c], 
    [LSSchedulerEmail__c:BankerName__c], 
    [LSSchedulerEmail__c:Banker_Title__c], 
    [LSSchedulerEmail__c:BankerWorkPhoneNumber__c], 
    [LSSchedulerEmail__c:BCCEmail__c], 
    [LSSchedulerEmail__c:BCCEmail2__c], 
    [LSSchedulerEmail__c:Branch_Phone_Number__c], 
    [LSSchedulerEmail__c:canDelete__c], 
    [LSSchedulerEmail__c:CCEmail__c], 
    [LSSchedulerEmail__c:CCEmail2__c], 
    [LSSchedulerEmail__c:City__c], 
    [LSSchedulerEmail__c:Client__c], 
    [LSSchedulerEmail__c:ClientFirstName__c], 
    [LSSchedulerEmail__c:ClientLastName__c], 
    [LSSchedulerEmail__c:FormatedPhone__c], 
    [LSSchedulerEmail__c:ClientMeetingSMSResponse__c], 
    [LSSchedulerEmail__c:ClientSMSResponseDateTime__c], 
    [LSSchedulerEmail__c:CollabhubClientURL__c], 
    [LSSchedulerEmail__c:Confirmation_Status__c], 
    [LSSchedulerEmail__c:Contact__c], 
    [LSSchedulerEmail__c:CreatedById], 
    [LSSchedulerEmail__c:CreatedDate], 
    [LSSchedulerEmail__c:IsDeleted], 
    [LSSchedulerEmail__c:Emailtype__c], 
    [LSSchedulerEmail__c:EmailOptOut__c], 
    [LSSchedulerEmail__c:FormatedSMSPhone__c], 
    [LSSchedulerEmail__c:Is_Prospect__c], 
    [LSSchedulerEmail__c:LastModifiedById], 
    [LSSchedulerEmail__c:LastModifiedDate], 
    [LSSchedulerEmail__c:LastReferencedDate], 
    [LSSchedulerEmail__c:LastViewedDate], 
    [LSSchedulerEmail__c:Locale__c], 
    [LSSchedulerEmail__c:LocationName__c], 
    [LSSchedulerEmail__c:Meeting__c], 
    [LSSchedulerEmail__c:MeetingAppointmentNumber__c], 
    [LSSchedulerEmail__c:MeetingEndTime__c], 
    [LSSchedulerEmail__c:MeetingID__c], 
    [LSSchedulerEmail__c:MeetingStartTime__c], 
    [LSSchedulerEmail__c:MeetingStartTimeString__c], 
    [LSSchedulerEmail__c:MeetingType__c], 
    [LSSchedulerEmail__c:MeetingStartTimeStringSMS__c], 
    [LSSchedulerEmail__c:Outcome_of_Meeting__c], 
    [LSSchedulerEmail__c:OwnerId], 
    [LSSchedulerEmail__c:Partner_Email__c], 
    [LSSchedulerEmail__c:Partner_License_Id__c], 
    [LSSchedulerEmail__c:Partner_Name__c], 
    [LSSchedulerEmail__c:PartnerOnly__c], 
    [LSSchedulerEmail__c:Partner_Phone_number__c], 
    [LSSchedulerEmail__c:Partner_Title__c], 
    [LSSchedulerEmail__c:PostalCode__c], 
    [LSSchedulerEmail__c:ConnectionReceivedId], 
    [LSSchedulerEmail__c:Name], 
    [LSSchedulerEmail__c:ConnectionSentId], 
    [LSSchedulerEmail__c:SMSOptIn__c], 
    [LSSchedulerEmail__c:State__c], 
    [LSSchedulerEmail__c:Status__c], 
    [LSSchedulerEmail__c:Street__c], 
    [LSSchedulerEmail__c:SystemModstamp], 
    [LSSchedulerEmail__c:TimeZone__c], 
    /* The logic will change for CWM AND NB; CASE  */
    COALESCE([LSSchedulerEmail__c:BCCEmail__c], 
            [LSSchedulerEmail__c:BCCEmail2__c], 
            [LSSchedulerEmail__c:CCEmail__c], 
            [LSSchedulerEmail__c:CCEmail2__c] ) AS [LSSchedulerEmail__c:ToEmail__c], 
    [LSSchedulerEmail__c:WorkTypeName__c], 
    [LSSchedulerEmail__c:XLobMeeting__c], 
    [LSSchedulerEmail__c:XLOB_Meeting_Reason__c] 
FROM [MeetingScheduler_Main]
WHERE [LSSchedulerEmail__c:ToEmail__c] IS NULL
AND [LSSchedulerEmail__c:LastModifiedDate]  >= DATEADD(MINUTE, -15, GETUTCDATE())

UNION 

/* Getting Missed records */
SELECT 
    synde.Contact__c AS [LSSchedulerEmail__c:Contact__r:Id], 
    synde.ToEmail__c AS [LSSchedulerEmail__c:Contact__r:Email], 
    synde.EmailOptOut__c AS [LSSchedulerEmail__c:Contact__r:HasOptedOutOfEmail], 
    synde.Id AS [LSSchedulerEmail__c:Id], 
    synde.Banker_Email__c AS [LSSchedulerEmail__c:Banker_Email__c], 
    synde.BankerName__c AS [LSSchedulerEmail__c:BankerName__c], 
    synde.Banker_Title__c AS [LSSchedulerEmail__c:Banker_Title__c], 
    synde.BankerWorkPhoneNumber__c AS [LSSchedulerEmail__c:BankerWorkPhoneNumber__c], 
    synde.BCCEmail__c AS [LSSchedulerEmail__c:BCCEmail__c], 
    synde.BCCEmail2__c AS [LSSchedulerEmail__c:BCCEmail2__c], 
    synde.Branch_Phone_Number__c AS [LSSchedulerEmail__c:Branch_Phone_Number__c], 
    synde.canDelete__c AS [LSSchedulerEmail__c:canDelete__c], 
    synde.CCEmail__c AS [LSSchedulerEmail__c:CCEmail__c], 
    synde.CCEmail2__c AS [LSSchedulerEmail__c:CCEmail2__c], 
    synde.City__c AS [LSSchedulerEmail__c:City__c], 
    synde.Client__c AS [LSSchedulerEmail__c:Client__c], 
    synde.ClientFirstName__c AS [LSSchedulerEmail__c:ClientFirstName__c], 
    synde.ClientLastName__c AS [LSSchedulerEmail__c:ClientLastName__c], 
    synde.FormatedPhone__c AS [LSSchedulerEmail__c:FormatedPhone__c], 
    synde.ClientMeetingSMSResponse__c AS [LSSchedulerEmail__c:ClientMeetingSMSResponse__c], 
    synde.ClientSMSResponseDateTime__c AS [LSSchedulerEmail__c:ClientSMSResponseDateTime__c], 
    synde.CollabhubClientURL__c AS [LSSchedulerEmail__c:CollabhubClientURL__c], 
    synde.Confirmation_Status__c AS [LSSchedulerEmail__c:Confirmation_Status__c], 
    synde.Contact__c AS [LSSchedulerEmail__c:Contact__c], 
    synde.CreatedById AS [LSSchedulerEmail__c:CreatedById], 
    synde.CreatedDate AS [LSSchedulerEmail__c:CreatedDate], 
    synde.IsDeleted AS [LSSchedulerEmail__c:IsDeleted], 
    synde.Emailtype__c AS [LSSchedulerEmail__c:Emailtype__c], 
    synde.EmailOptOut__c AS [LSSchedulerEmail__c:EmailOptOut__c], 
    synde.FormatedSMSPhone__c AS [LSSchedulerEmail__c:FormatedSMSPhone__c], 
    synde.Is_Prospect__c AS [LSSchedulerEmail__c:Is_Prospect__c], 
    synde.LastModifiedById AS [LSSchedulerEmail__c:LastModifiedById], 
    synde.LastModifiedDate AS [LSSchedulerEmail__c:LastModifiedDate], 
    synde.LastReferencedDate AS [LSSchedulerEmail__c:LastReferencedDate], 
    synde.LastViewedDate AS [LSSchedulerEmail__c:LastViewedDate], 
    synde.Locale__c AS [LSSchedulerEmail__c:Locale__c], 
    synde.LocationName__c AS [LSSchedulerEmail__c:LocationName__c], 
    synde.Meeting__c AS [LSSchedulerEmail__c:Meeting__c], 
    synde.MeetingAppointmentNumber__c AS [LSSchedulerEmail__c:MeetingAppointmentNumber__c], 
    synde.MeetingEndTime__c AS [LSSchedulerEmail__c:MeetingEndTime__c], 
    synde.MeetingID__c AS [LSSchedulerEmail__c:MeetingID__c], 
    synde.MeetingStartTime__c AS [LSSchedulerEmail__c:MeetingStartTime__c], 
    synde.MeetingStartTimeString__c AS [LSSchedulerEmail__c:MeetingStartTimeString__c], 
    synde.MeetingType__c AS [LSSchedulerEmail__c:MeetingType__c], 
    synde.MeetingStartTimeStringSMS__c AS [LSSchedulerEmail__c:MeetingStartTimeStringSMS__c], 
    synde.Outcome_of_Meeting__c AS [LSSchedulerEmail__c:Outcome_of_Meeting__c], 
    synde.OwnerId AS [LSSchedulerEmail__c:OwnerId], 
    synde.Partner_Email__c AS [LSSchedulerEmail__c:Partner_Email__c], 
    synde.Partner_License_Id__c AS [LSSchedulerEmail__c:Partner_License_Id__c], 
    synde.Partner_Name__c AS [LSSchedulerEmail__c:Partner_Name__c], 
    synde.PartnerOnly__c AS [LSSchedulerEmail__c:PartnerOnly__c], 
    synde.Partner_Phone_number__c AS [LSSchedulerEmail__c:Partner_Phone_number__c], 
    synde.Partner_Title__c AS [LSSchedulerEmail__c:Partner_Title__c], 
    synde.PostalCode__c AS [LSSchedulerEmail__c:PostalCode__c], 
    synde.ConnectionReceivedId AS [LSSchedulerEmail__c:ConnectionReceivedId], 
    synde.Name AS [LSSchedulerEmail__c:Name], 
    synde.ConnectionSentId AS [LSSchedulerEmail__c:ConnectionSentId], 
    synde.SMSOptIn__c AS [LSSchedulerEmail__c:SMSOptIn__c], 
    synde.State__c AS [LSSchedulerEmail__c:State__c], 
    synde.Status__c AS [LSSchedulerEmail__c:Status__c], 
    synde.Street__c AS [LSSchedulerEmail__c:Street__c], 
    synde.SystemModstamp AS [LSSchedulerEmail__c:SystemModstamp], 
    synde.TimeZone__c AS [LSSchedulerEmail__c:TimeZone__c], 
    synde.ToEmail__c AS [LSSchedulerEmail__c:ToEmail__c], 
    synde.WorkTypeName__c AS [LSSchedulerEmail__c:WorkTypeName__c], 
    synde.XLobMeeting__c AS [LSSchedulerEmail__c:XLobMeeting__c], 
    synde.XLOB_Meeting_Reason__c AS [LSSchedulerEmail__c:XLOB_Meeting_Reason__c] 
FROM 
    ENT.[LSSchedulerEmail__c_Salesforce_1] AS synde
WHERE NOT EXISTS (
    SELECT 1 
    FROM [MeetingScheduler_Main] msj
    WHERE synde.Contact__c = msj.[LSSchedulerEmail__c:Contact__r:Id]
        AND msj.[LSSchedulerEmail__c:Meeting__c] = synde.Meeting__c)
AND synde.LastModifiedDate >= DATEADD(MINUTE, -15, GETUTCDATE())

UNION 

/* Getting the Not Sent Data */
SELECT 
    [LSSchedulerEmail__c:Contact__r:Id], 
    [LSSchedulerEmail__c:Contact__r:Email], 
    [LSSchedulerEmail__c:Contact__r:HasOptedOutOfEmail], 
    [LSSchedulerEmail__c:Id], 
    [LSSchedulerEmail__c:Banker_Email__c], 
    [LSSchedulerEmail__c:BankerName__c], 
    [LSSchedulerEmail__c:Banker_Title__c], 
    [LSSchedulerEmail__c:BankerWorkPhoneNumber__c], 
    [LSSchedulerEmail__c:BCCEmail__c], 
    [LSSchedulerEmail__c:BCCEmail2__c], 
    [LSSchedulerEmail__c:Branch_Phone_Number__c], 
    [LSSchedulerEmail__c:canDelete__c], 
    [LSSchedulerEmail__c:CCEmail__c], 
    [LSSchedulerEmail__c:CCEmail2__c], 
    [LSSchedulerEmail__c:City__c], 
    [LSSchedulerEmail__c:Client__c], 
    [LSSchedulerEmail__c:ClientFirstName__c], 
    [LSSchedulerEmail__c:ClientLastName__c], 
    [LSSchedulerEmail__c:FormatedPhone__c], 
    [LSSchedulerEmail__c:ClientMeetingSMSResponse__c], 
    [LSSchedulerEmail__c:ClientSMSResponseDateTime__c], 
    [LSSchedulerEmail__c:CollabhubClientURL__c], 
    [LSSchedulerEmail__c:Confirmation_Status__c], 
    [LSSchedulerEmail__c:Contact__c], 
    [LSSchedulerEmail__c:CreatedById], 
    [LSSchedulerEmail__c:CreatedDate], 
    [LSSchedulerEmail__c:IsDeleted], 
    [LSSchedulerEmail__c:Emailtype__c], 
    [LSSchedulerEmail__c:EmailOptOut__c], 
    [LSSchedulerEmail__c:FormatedSMSPhone__c], 
    [LSSchedulerEmail__c:Is_Prospect__c], 
    [LSSchedulerEmail__c:LastModifiedById], 
    [LSSchedulerEmail__c:LastModifiedDate], 
    [LSSchedulerEmail__c:LastReferencedDate], 
    [LSSchedulerEmail__c:LastViewedDate], 
    [LSSchedulerEmail__c:Locale__c], 
    [LSSchedulerEmail__c:LocationName__c], 
    [LSSchedulerEmail__c:Meeting__c], 
    [LSSchedulerEmail__c:MeetingAppointmentNumber__c], 
    [LSSchedulerEmail__c:MeetingEndTime__c], 
    [LSSchedulerEmail__c:MeetingID__c], 
    [LSSchedulerEmail__c:MeetingStartTime__c], 
    [LSSchedulerEmail__c:MeetingStartTimeString__c], 
    [LSSchedulerEmail__c:MeetingType__c], 
    [LSSchedulerEmail__c:MeetingStartTimeStringSMS__c], 
    [LSSchedulerEmail__c:Outcome_of_Meeting__c], 
    [LSSchedulerEmail__c:OwnerId], 
    [LSSchedulerEmail__c:Partner_Email__c], 
    [LSSchedulerEmail__c:Partner_License_Id__c], 
    [LSSchedulerEmail__c:Partner_Name__c], 
    [LSSchedulerEmail__c:PartnerOnly__c], 
    [LSSchedulerEmail__c:Partner_Phone_number__c], 
    [LSSchedulerEmail__c:Partner_Title__c], 
    [LSSchedulerEmail__c:PostalCode__c], 
    [LSSchedulerEmail__c:ConnectionReceivedId], 
    [LSSchedulerEmail__c:Name], 
    [LSSchedulerEmail__c:ConnectionSentId], 
    [LSSchedulerEmail__c:SMSOptIn__c], 
    [LSSchedulerEmail__c:State__c], 
    [LSSchedulerEmail__c:Status__c], 
    [LSSchedulerEmail__c:Street__c], 
    [LSSchedulerEmail__c:SystemModstamp], 
    [LSSchedulerEmail__c:TimeZone__c], 
    CASE 
        WHEN NotSent.Reason IN ('Build Email Error') THEN
                [LSSchedulerEmail__c:ToEmail__c]
        ELSE
            COALESCE([LSSchedulerEmail__c:BCCEmail__c], 
                [LSSchedulerEmail__c:BCCEmail2__c], 
                [LSSchedulerEmail__c:CCEmail__c], 
                [LSSchedulerEmail__c:CCEmail2__c]) 
        END AS [LSSchedulerEmail__c:ToEmail__c], 
    [LSSchedulerEmail__c:WorkTypeName__c], 
    [LSSchedulerEmail__c:XLobMeeting__c], 
    [LSSchedulerEmail__c:XLOB_Meeting_Reason__c] 
FROM [ALL_NotSent_Stage_v1] AS NotSent  
INNER JOIN MeetingScheduler_Main MS
	ON NotSent.SubscriberKey = MS.[LSSchedulerEmail__c:Contact__r:Id]
INNER JOIN _Job AS job
		ON job.JobID = NotSent.SendID
		AND NotSent.TriggeredSendExternalKey = job.TriggeredSendCustomerKey
        AND DATEDIFF(MINUTE, MS.[LSSchedulerEmail__c:LastModifiedDate], DATEADD(MINUTE, DATEDIFF(MINUTE, 'Central Standard Time', 'UTC'), job.CreatedDate)) BETWEEN -15 AND 15
INNER JOIN _JourneyActivity AS ja
        ON job.TriggererSendDefinitionObjectID = ja.JourneyActivityObjectID
INNER JOIN _Journey  AS j
        ON ja.VersionID = j.VersionID
        AND j.JOURNEYNAME like 'MeetingScheduler%'
WHERE NotSent.DateInserted  >= DATEADD(MINUTE, -15, GETDATE())
